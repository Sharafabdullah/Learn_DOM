/* --- Interactive Elements --- */
/* Mobile section example adjustments */
@media (max-width: 768px) {
  .section-example {
    padding: 1rem;
    margin: 1rem 0;
    border-radius: 4px;
    max-width: 100vw;
    overflow-x: hidden;
    box-sizing: border-box;
  }
}
.dom-tree .node:hover {
  stroke-width: 4px;
  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.4));
}

.dom-tree .node-type-document:hover {
  filter: drop-shadow(0 0 8px rgba(255, 77, 109, 0.5));
}
.dom-tree .node-type-element:hover {
  filter: drop-shadow(0 0 8px rgba(76, 201, 240, 0.5));
}
.dom-tree .node-type-attribute:hover {
  filter: drop-shadow(0 0 8px rgba(247, 37, 133, 0.5));
}
.dom-tree .node-type-text:hover {
  filter: drop-shadow(0 0 8px rgba(114, 9, 183, 0.5));
}

.code-playground {
  background: var(--surface-dark);
  border: 1px solid var(--secondary-color);
  border-radius: 6px;
  box-shadow: inset 0 0 8px rgba(199, 125, 255, 0.3);
  padding: 1.5rem;
  margin-top: 2rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  min-height: 400px;
  max-width: 100%;
  box-sizing: border-box;
}

/* Mobile adjustments for code playground */
@media (max-width: 768px) {
  .code-playground {
    padding: 1rem;
    gap: 1rem;
    min-height: auto;
    margin-top: 1rem;
  }
}

.section-example {
  background: var(--surface-dark);
  border: 1px solid var(--secondary-color);
  border-radius: 6px;
  box-shadow: inset 0 0 8px rgba(199, 125, 255, 0.3);
  padding: 2rem 0 0rem;
  margin: 2rem 0rem;
}

/* Mobile section example adjustments */
@media (max-width: 768px) {
  .section-example {
    padding: 1rem 0;
    margin: 1rem 0;
    border-radius: 4px;
  }
}

.editor-sandbox-container {
  display: grid;
  grid-template-columns: minmax(0, 60%) minmax(0, 40%);
  gap: 2rem;
  width: 100%;
}

/* Mobile responsiveness - stack editor and preview vertically */
@media (max-width: 768px) {
  .editor-sandbox-container {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

.editor-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%; /* Ensure it takes full width of its grid cell */
  min-width: 0; /* Prevent flex items from overflowing */
  overflow: hidden; /* Prevent any potential overflow */
}

/* Mobile editor container adjustments */
@media (max-width: 768px) {
  .editor-container {
    gap: 0.75rem;
    order: 1; /* Put editor first on mobile */
  }
}

.visualization-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Mobile visualization container adjustments */
@media (max-width: 768px) {
  .visualization-container {
    gap: 0.75rem;
    order: 2; /* Put visualization after editor on mobile */
  }
}

.jsEditor {
  flex-grow: 1;
  min-height: 400px;
  border-radius: 8px;
  overflow-x: auto; /* Only horizontal scroll */
  overflow-y: hidden; /* Prevent vertical scrollbar */
  max-width: 100%;
  scrollbar-width: thin;
  scrollbar-color: var(--border-color) transparent;
  background: var(--surface-darkest);
  box-shadow: inset 0 0 0 1px var(--border-color);
}

/* Mobile editor adjustments */
@media (max-width: 768px) {
  .jsEditor {
    min-height: 300px;
    border-radius: 6px;
  }
}

.jsEditor .CodeMirror {
  height: 100%;
  font-family: var(--font-code);
  font-size: var(--font-size-lg);
  line-height: 1.6;
  padding: 1rem;
  background: var(--bg-color) !important;
}

/* Mobile CodeMirror adjustments */
@media (max-width: 768px) {
  .jsEditor .CodeMirror {
    font-size: 14px;
    padding: 0.75rem;
    line-height: 1.4;
  }
}

.run-button {
  align-self: flex-end;
  margin-top: auto;
  background: var(--accent-color);
  border-color: var(--border-color);
}

.run-button:hover {
  background: var(--accent-hover);
}

.preview-container {
  background: var(--surface-lighter);
  border-radius: 8px;
  padding: 1rem;
  border: 1px solid var(--border-color);
  height: 100%; /* Take full height of container */
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--border-color) transparent;
}

.sandbox-content {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.sandbox-content h3 {
  margin: 0 0 1rem 0;
  font-family: var(--font-display);
  color: var(--primary-color);
  font-size: var(--font-size-lg);
  text-align: center;
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 0.5rem;
}

/* Mobile sandbox content adjustments */
@media (max-width: 768px) {
  .sandbox-content h3 {
    font-size: var(--font-size-base);
    margin: 0 0 0.75rem 0;
    padding-bottom: 0.4rem;
  }
}

.previewArea {
  flex: 1;
  min-height: 300px;
  background: var(--surface-light);
  border-radius: 6px;
  border: 1px solid var(--border-color);
  position: relative;
  overflow: hidden;
  /* Browser-like appearance */
  box-shadow: inset 0 0 10px var(--surface-lighter);
}

/* Mobile preview adjustments */
@media (max-width: 768px) {
  .previewArea {
    min-height: 250px;
    order: 2; /* Put preview after editor on mobile */
  }
}

.previewArea iframe {
  width: 100% !important;
  height: 100% !important;
  border: none !important;
  border-radius: 4px !important;
  background: var(--preview-bg) !important;
  display: block;
}

/* Browser-like styling for preview */
.previewArea::before {
  content: "üåê Preview Browser";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 24px;
  background: linear-gradient(
    to bottom,
    var(--preview-header-from),
    var(--preview-header-to)
  );
  color: var(--preview-text);
  font-size: 11px;
  font-family: var(--font-code);
  display: flex;
  align-items: center;
  padding: 0 8px;
  z-index: 10;
  border-bottom: 1px solid var(--preview-border);
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}

.previewArea iframe {
  margin-top: 25px !important;
  height: calc(100% - 25px) !important;
}

/* --- D3 Graph Styles --- */
/* The main container for the SVG */
.domTree {
  flex: 1;
  background: var(--surface-lighter);
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  min-height: 400px;
  height: 400px;
  position: relative;
  margin-top: 1rem;
}

/* Mobile DOM tree adjustments */
@media (max-width: 768px) {
  .domTree {
    min-height: 300px;
    height: 300px;
    border-radius: 6px;
    margin-top: 0.75rem;
  }
}

/* Style the links (lines) of the graph */
.domTree .link {
  stroke: var(--secondary-color);
  stroke-opacity: 0.6;
  stroke-width: 2px;
  stroke-linecap: round;
  transition: all 0.3s ease;
  stroke-opacity: 1;
  stroke-width: 3px;
  filter: drop-shadow(0 0 4px var(--link-shadow));
}

/* Base style for all nodes (circles) */
.domTree .node {
  stroke-width: 2.5px;
  cursor: grab;
  transition: all 0.3s ease-in-out;
  filter: drop-shadow(0 0 4px var(--node-shadow));
}
.domTree .node:active {
  cursor: grabbing;
}

/* Specific styles for each node type */
.domTree .node-type-document {
  fill: var(--dom-document-fill);
  stroke: var(--dom-document-stroke);
}
.domTree .node-type-element {
  fill: var(--dom-element-fill);
  stroke: var(--dom-element-stroke);
}
.domTree .node-type-attribute {
  fill: var(--dom-attribute-fill);
  stroke: var(--dom-attribute-stroke);
}
.domTree .node-type-text {
  fill: var(--dom-text-fill);
  stroke: var(--dom-text-stroke);
}

/* Node hover effects */
.domTree .node:hover {
  stroke-width: 4px;
  filter: drop-shadow(0 0 8px var(--white-shadow));
}

.domTree .node-type-document:hover {
  fill: var(--dom-document-hover);
}
.domTree .node-type-element:hover {
  fill: var(--dom-element-hover);
}
.domTree .node-type-attribute:hover {
  fill: var(--dom-attribute-hover);
}
.domTree .node-type-text:hover {
  fill: var(--dom-text-hover);
}

/* Style the text labels for the nodes */
.domTree .node-label {
  font-family: var(--font-code);
  font-size: 14px;
  font-weight: 600;
  text-anchor: middle;
  pointer-events: none;
  fill: var(--white-color) !important;
  text-shadow: 1px 1px 0 var(--black-color), -1px -1px 0 var(--black-color),
    1px -1px 0 var(--black-color), -1px 1px 0 var(--black-color),
    2px 2px 4px var(--text-shadow);
  dominant-baseline: middle;
}

/* Adjust label colors for better contrast - all white now */
.domTree .node-type-document .node-label {
  fill: var(--white-color) !important;
  font-weight: 700;
}
.domTree .node-type-element .node-label {
  fill: var(--white-color) !important;
  font-weight: 600;
}
.domTree .node-type-attribute .node-label {
  fill: var(--white-color) !important;
  font-weight: 500;
  font-size: 12px;
}
.domTree .node-type-text .node-label {
  fill: var(--white-color) !important;
  font-weight: 500;
  font-size: 12px;
  font-style: italic;
}

/* Style the links (lines) of the graph */
.dom-tree .link {
  stroke: var(--secondary-color);
  stroke-opacity: 0.6;
  stroke-width: 2px;
  stroke-linecap: round;
  transition: all 0.3s ease;
  stroke-opacity: 1;
  stroke-width: 3px;
  filter: drop-shadow(0 0 4px var(--link-shadow));
}

/* Base style for all nodes (circles) */
.dom-tree .node {
  stroke-width: 2.5px;
  cursor: grab;
  transition: all 0.3s ease-in-out;
  filter: drop-shadow(0 0 4px var(--node-shadow));
}
.dom-tree .node:active {
  cursor: grabbing;
}

/* Specific styles for each node type */
.dom-tree .node-type-document {
  fill: var(--dom-alt-document-fill); /* Vibrant coral for root */
  stroke: var(--dom-alt-document-stroke);
  filter: drop-shadow(0 0 6px rgba(255, 77, 109, 0.3));
}
.dom-tree .node-type-element {
  fill: var(--dom-alt-element-fill); /* Bright cyan for elements */
  stroke: var(--dom-alt-element-stroke);
  filter: drop-shadow(0 0 6px rgba(76, 201, 240, 0.3));
}
.dom-tree .node-type-attribute {
  fill: var(--dom-alt-attribute-fill); /* Magenta for attributes */
  stroke: var(--dom-alt-attribute-stroke);
  filter: drop-shadow(0 0 6px rgba(247, 37, 133, 0.3));
}
.dom-tree .node-type-text {
  fill: var(--dom-alt-text-fill); /* Purple for text content */
  stroke: var(--dom-alt-text-stroke);
  filter: drop-shadow(0 0 6px rgba(114, 9, 183, 0.3));
}

/* Node hover effects */
.dom-tree .node:hover {
  /* transform: scale(1.1); */
  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.4));
}

.dom-tree .node-type-document:hover {
  filter: drop-shadow(0 0 8px rgba(255, 77, 109, 0.5));
}
.dom-tree .node-type-element:hover {
  filter: drop-shadow(0 0 8px rgba(76, 201, 240, 0.5));
}
.dom-tree .node-type-attribute:hover {
  filter: drop-shadow(0 0 8px rgba(247, 37, 133, 0.5));
}
.dom-tree .node-type-text:hover {
  filter: drop-shadow(0 0 8px rgba(114, 9, 183, 0.5));
}

/* Style the text labels for the nodes */
.dom-tree .node-label {
  fill: var(--white-color) !important;
  font-family: var(--font-code);
  font-size: 14px;
  font-weight: 600;
  text-anchor: middle;
  pointer-events: none;
  text-shadow: 1px 1px 0 var(--black-color), -1px -1px 0 var(--black-color),
    1px -1px 0 var(--black-color), -1px 1px 0 var(--black-color),
    2px 2px 4px var(--text-shadow);
  dominant-baseline: middle;
}

/* Adjust label colors for better contrast - all white now */
.dom-tree .node-type-document .node-label {
  fill: var(--white-color) !important;
  font-weight: 700;
}
.dom-tree .node-type-element .node-label {
  fill: var(--white-color) !important;
  font-weight: 600;
}
.dom-tree .node-type-attribute .node-label {
  fill: var(--white-color) !important;
  font-weight: 500;
  font-size: 12px; /* Slightly smaller for attribute labels */
}
.dom-tree .node-type-text .node-label {
  fill: var(--white-color) !important;
  font-weight: 500;
  font-size: 12px; /* Slightly smaller for text content */
  font-style: italic;
}

/* New styles for the DOM tree layout */
.dom-tree {
  background: var(--surface-lighter);
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  position: relative;
  min-height: 35vh; /* Set minimum height to 35% of viewport height */
  height: auto;
  padding: 1rem;
}
